// Copyright (c) 2010 Satoshi Nakamoto
// Copyright (c) 2009-2014 The Bitcoin developers
// Copyright (c) 2014-2015 The Dash developers
// Copyright (c) 2015-2018 The PIVX developers
// Copyright (c) 2019 The LightPayCoin developers
// Distributed under the MIT software license, see the accompanying
// file COPYING or http://www.opensource.org/licenses/mit-license.php.

#include "libzerocoin/Params.h"
#include "chainparams.h"
#include "random.h"
#include "util.h"
#include "utilstrencodings.h"

#include <assert.h>

#include <boost/assign/list_of.hpp>

using namespace std;
using namespace boost::assign;

struct SeedSpec6 {
    uint8_t addr[16];
    uint16_t port;
};

#include "chainparamsseeds.h"

/**
 * Main network
 */

//! Convert the pnSeeds6 array into usable address objects.
static void convertSeed6(std::vector<CAddress>& vSeedsOut, const SeedSpec6* data, unsigned int count)
{
    // It'll only connect to one or two seed nodes because once it connects,
    // it'll get a pile of addresses with newer timestamps.
    // Seed nodes are given a random 'last seen time' of between one and two
    // weeks ago.
    const int64_t nOneWeek = 7 * 24 * 60 * 60;
    for (unsigned int i = 0; i < count; i++) {
        struct in6_addr ip;
        memcpy(&ip, data[i].addr, sizeof(ip));
        CAddress addr(CService(ip, data[i].port));
        addr.nTime = GetTime() - GetRand(nOneWeek) - nOneWeek;
        vSeedsOut.push_back(addr);
    }
}

//   What makes a good checkpoint block?
// + Is surrounded by blocks with reasonable timestamps
//   (no blocks before with a timestamp after, none after with
//    timestamp before)
// + Contains no strange transactions
static Checkpoints::MapCheckpoints mapCheckpoints =
    boost::assign::map_list_of
    (0, uint256("00000dfdec6a9190b26520e93ef5eba15a82646a47ddf8fb5be4477a836467ee"))
    (1000, uint256("580d1e3d6b4fc28ebb85f0377ed632e960d46a0a483170b03146fcb5159e5d5b"))
    (2000, uint256("63a33c9dc2c0fb6d6b1c510e98e0dc312dedef223012d0bf67e6cc5f2f5bc757"))
    (3000, uint256("88b9e6d562bdd14f99f0422826723aa57582045532b3a1ffe53ed3ae34c369b7"))
    (4000, uint256("f4774840ae5dd395776140dd8b168c7a2320eb09cce8b6170a6926ed2feffba1"))
    (5000, uint256("a823b72d27cda984124d8caa71bd472220b8361666f2df837d87138dbfa840bb"))
    (6000, uint256("c939cf786bfbae7a74e5b01ff4e71103d44e63a4708d9e11d5a6783ab734b9ea"))
    (7000, uint256("b15446c6aac470c7ea52f250739067612d88d9a431c5b2a5ae395b33e8cbd2b4"))
    (8000, uint256("8ae9b6db3e737dd1785cee5f3a457a54d8e93bd40a2f2daeec941f21804c15a5"))
    (9000, uint256("efcce503399b756822517a90be2c09fb7dee63e6a45c90c588d4905512bd1a79"))
    (10000, uint256("90bc1be541f5d3a168773b3274dbafa7df1fc972ec75f00521801c2263a31ce3"))
    (11000, uint256("5020d92ce6082d83c932d9ffd838f81f9157d880bcc02a2b640ed7ea14d76220"))
    (12000, uint256("554aeae539d81ba336bcd2e8973979a0581ebb4e419a00b8b9ecf42c7989fba8"))
    (13000, uint256("8da19d8cf8e724d7403863d862c204d79deea92e789f0fb519a02acc0233b568"))
    (14000, uint256("b693910aa7de49aa98a8c50ec66513606af8330ae7cfa0d681bee1c7aa1346f9"))
    (15000, uint256("f6e86e60fbb6460fcf6156ac3cfa8e02bb0cf451c61d35d37aaaced370683093"))
    (16000, uint256("b69b3cdf6113990383ff02aea4fb460f1ba440bd89bcf0c9738cc5110d255cd0"))
    (17000, uint256("69d96d57c3a5b1244d079c75e581ab715d3900429ed03a5954452559ca488655"))
    (18000, uint256("4c886e305d3634c1adc29df7c83456a289d41c833fc852099efaf3a09b3243d7"))
    (19000, uint256("fd02d80801166e364d9e62d5f1ce1f3deacf0d9058242c3e53623ecce319f2b0"))
    (20000, uint256("d0d7662978db8174c7fec4e67c83800d96f51dfddd8f108473b9323af93a8af3"))
    (21000, uint256("22b55cd93d431bdb9cf1219bc34722f4d366f0eb62bb3f7b2065edaa72c6435d"))
    (22000, uint256("824a4db7d3c8956beacc72bf23e78e4ce2ec4bb173e08ccea9ccc1fd4a88ced3"))
    (23000, uint256("ee203a0dea8899f9c42e2ca1d2afcae00da8c506853f374ac315810a35d09a4a"))
    (24000, uint256("dbb1bc6014b0114978ea32fc370142bdec4f79c2e07978a1fccf3793fcfdaeea"))
    (25000, uint256("20f860dd641af8371ee2fb3e067b837daed93855f72b7d24c08780a975a7c018"))
    (26000, uint256("e1a5876a5c290e3d00846a341ddad47c1821127f1552ef60fc18bc5e4deeaa66"))
    (27000, uint256("a1c5b98b03182bd060972f3a22b3f61862fb11a190ef1080ac6b4f2ac0366110"))
    (28000, uint256("d83f52080bb773880f9421dff20a6e5a43ddc47a0ed80b428e4bfd263f1c32f2"))
    (29000, uint256("a8e5cf934bdba2efa412c98756c225b025a064116ad08a463d93f887f623a25d"))
    (30000, uint256("eeddf96cabd19e2a4052791f0677b2f2ec1ca61748fe5b1bc31626d5bfb2120a"))
    (31000, uint256("15c21efe4321562e2c3f21c0281bcc53c7ae3504fbe093158b53cba9fffec852"))
    (32000, uint256("2954a35b29fc2acb866fbabca7fee268558e238fd14764d78b759e4c4bc3de01"))
    (33000, uint256("61fef66361aac144109d4bf48eb06575bce3dc579de66c719cbe8c1d6d81a702"))
    (34000, uint256("fd575c7a8dba94976bc574ac2552f0c27ae43e0fb6ebd4027f4382d74349b37e"))
    (35000, uint256("865a4889b021500729a8a79863e115c45927cfdbeb2b4bbb71d1d180c4663d17"))
    (36000, uint256("6e161d8aa35211557b7daff3a2f0f6bcca50082fd629952b9ee8f1bbb3c9a495"))
    (37000, uint256("4e7d7a09efc68da33a2450b71065c3bf55e7cfdcffdaca23456bbe18c83cee53"))
    (38000, uint256("4c3d15011f5aefbf7bc6112f6bf0d6de04e6776384ec6e2d5fb01f9f497165fd"))
    (39000, uint256("e839c3d6683e71861e1b321c1938303d50a62d4be5119094f972d87218d41bd1"))
    (40000, uint256("c51f4dc6eb37366712225372d8b1f2b7c21088e9f5c36eb25b5b05c440a51210"))
    (41000, uint256("6c7f81bdc91c3c71b6948d28a7be9ed8fa0835f4eb126b1a1ce559413e0f2e96"))
    (42000, uint256("ea90595f73360896792e15e7716afb61be7263317c89c2af79eda7d1599f4401"))
    (43000, uint256("7f36ba1b05050644c3e3c40442f916cf2d25a53281e8d1135c49b2adac59396c"))
    (44000, uint256("3417df5e05b6ba28bae80b28d14a142f8572c141b800f0b2a2b4c00d89845271"))
    (45000, uint256("3892e96c5e42b67ac8df5ff318dafad2694df60f969dd7a586dc5134b02dec5d"))
    (46000, uint256("204a98000fda1afdcc58407481d03575decaa7b5bc2768fd609ab3137f253b5a"))
    (47000, uint256("95f604dc283fb39edf2d60f68404c59eedbc25d2d17d47b835ad818f34876700"))
    (48000, uint256("c5f509e17aac92f3c28b9f003e6afc835b2481689b8d625829aa364d4600603e"))
    (49000, uint256("a3b8849785a498bc114db355038b972ac9299295cf28aa49139ad8c736641375"))
    (50000, uint256("8cca3f2c4fb8292acabf5df7c6e8f40b3e954d4af3fe982d10efbf7cd9cfce71"))
    (51000, uint256("032b8b2ec91f6b3cb58be803d540cc8234c7faf40c35e7cfc203a588e94d0298"))
    (52000, uint256("50f30fd7b0c3a35de59ab30e39e5abb738a9360787e86a28892fd73cc82c92c9"))
    (53000, uint256("bf790d0fb49402d9d5d01fded34a140bfc4c0d4376043562b674fb3498c2cddd"))
    (54000, uint256("b3eeb79f76f17dc5b7e1840e6554660cd9c755cc76fc88bb39315dbbecbfb762"))
    (55000, uint256("e662f604fd994e600a20dc78d151853122932198e5b23b87e87f66242d86ae59"))
    (56000, uint256("8b6378884dfc7b561b77c3b2b5b66547f9e2f242a58d082a21b770fee1214c06"))
    (57000, uint256("c4a19f450fae3fcfb7600209145cb4c6f7ac3197ada119fdd4c95a15134e0d68"))
    (58000, uint256("2a023a1f49c01f63af50a0489cccdab2f78a46d48a7bb7572e16b4efae736451"))
    (59000, uint256("0fb561a34f5856adda7b13d414d0861cc7ba4755e09420a137163722062be565"))
    (60000, uint256("3a16909fc53f6a236b045b4d033c5fc15ff8397e3435cffa430de3f371483a5a"))
    (61000, uint256("e947650654e47c7d0bb85c7d9d296e8043900baeacfb25a3ea8c1621464af70c"))
    (62000, uint256("8b618b32ffbe40b71c030d34c6aae0c31ec63a5dd403f6a8d7e93cf6c946d2c0"))
    (63000, uint256("0db97ceee36c5027df18ead1acb300c685217d18db9d4f8ecdfb739d4633964f"))
    (64000, uint256("72535d6e8d4e511fbcfba461ccb979b7ef8f31278f035e479b075394d74c9d58"))
    (65000, uint256("47e166be11b434bda3038a4f52ddba3cb21a8137f33587dac3c5114869a54a4e"))
    (66000, uint256("7bab05efbe6e3b73df5ad71b32d3cba13a791af90a223908b623685f43fe31f3"))
    (67000, uint256("d4058129c2f3f18d2a9e6de27b03f962c60965933ebf042e2a9d8665bf9d7f08"))
    (68000, uint256("055cb0f85c83f0d6b2409206fdbdc9dcc7f897ffe403e6e3ee35449ae077c234"))
    (69000, uint256("f5f5135e9a5793db1867458a78abbfb65a22f520b9763c6436302504d78019a5"))
    (70000, uint256("f1e491b40b690f8cd270fc75a850758043a048f9eef5f986f4312241e1d4f51e"))
    (71000, uint256("aaa512a7eef28aba722f9e20482c41692cd16fc54a6b4f490d9521264fc262b5"))
    (72000, uint256("5a2d113ec0a2e90017a8dd21263b7ec4be8cbb069b3dce19bfd72760762287b8"))
    (73000, uint256("cb788bb7ceefa0ccb39e9cdc79f14d79f982d62f1dde8f18d096b158dd64b4cf"))
    (74000, uint256("fb76b3ef8d5a6c259d7c654442288544525c0f562f72815f7a5432c9e25e24b4"))
    (75000, uint256("2364e395d5a7a3f10c9935f30361479de3c29542d6dfed4f8124649e439408d9"))
    (76000, uint256("457b34ad9b888212d1f3c224ea1c8b1dae8478b18245708c78e4c9c082e6a7a5"))
    (77000, uint256("646b70d38a5e4fab975329e2cb273daefaa0612dcb90234b13fe1b4b89a3a98a"))
    (78000, uint256("a88ac7a7ad17489d7b61f227d2b3066235254b0cf31a934c9a1fae16ed3500bc"))
    (79000, uint256("988c6c6f3c43468f52317205832f96e111d2b86be07994b0dc7852474abda669"))
    (80000, uint256("56358770a9e489371111972418c5c60048027da4869aef575e5515a73116d5e3"))
    (81000, uint256("a1359536c86f71cd1131733e2aa93e6f82e9fd9257800bc0b1045dfa4ab07b3d"))
    (82000, uint256("5106cbcaae471d85d92030eeeff4cd429cc96687a4192b5eda95fbc00f8589d8"))
    (83000, uint256("719e2d36b0796bfb526bfde8d5bfc9affee469eb746352446e6021a570a845f9"))
    (84000, uint256("54a8d5066dd6507590e1c3b7746553a05240acb5821ae610be0713f08544fd97"))
    (85000, uint256("d5987f200591ed936c5d907bcedf5bdd504a74d22af9c61c16516cf947597258"))
    (86000, uint256("7adb3eff9dcc1da978b49cf36164d495706d53cf2c3b1630a953c5a5328aedee"))
    (87000, uint256("924538b5f33903bc3dd8fe02fa9c22edeba449e8ebbc2f5101db014835b42ded"))
    (88000, uint256("42c456f3e1df8b8c3b53ade247f390216bb8f36f99ff4fd958a7b442cc51aebf"))
    (89000, uint256("4f4630900fd8295dd3b57c322ca53fafc7584ea6488f684877e9d5743db268ae"))
    (90000, uint256("0406173b5ac8d1f3c6a62864633d8dcbda118318f95177f612b90c8c901dfef3"))
    (91000, uint256("ad6cad334377dac292d3b373bb2a860a7310d8da2edcc1e599157a250badcd0b"))
    (92000, uint256("0cdd733635c1292eadf5bb444ecf9730d53501ede0602eba87e5d030fcc8e2bb"))
    (93000, uint256("4743ee34bfa6aa70ae6b9d828964a6cd452160ad0831193761c61e7fe4d41af0"))
    (94000, uint256("9614c6d68f85ce845935ea962f1dd09f4533c889ec78b5a3ebc4f4d8e88f21d7"))
    (95000, uint256("ec591e2320503d042b9b1a6674343cb0e71b045a6699915f65c076102ca2aaad"))
    (96000, uint256("dce41cf317ec55fe1b8ffb8dfbe0031d6fa0d28e0fb75d2b43e50855ede06f62"))
    (97000, uint256("83c4a75ceeaaddcff82ed03e228c479ce16936d62601fe33c510c75a706c0231"))
    (98000, uint256("6cf49bc5d5f5c485ff1cc118dba2bf008afcfcab4de4f0b9eef0e5e345176ae1"))
    (99000, uint256("891acd6a29d3d65d9ad94dc64f756c73aff7fe388c2bb4883994572786e8fbe1"))
    (100000, uint256("144995e0a013fd5fa10823652e88efca14782bdc79a1db50e53e24211e88279e"))
    (101000, uint256("0964630a6ec892978263fac4c85ea5ed7d02571ad3b2755599a3aff9ade606fe"))
    (102000, uint256("f325bcfb5162a97ea865aaceb875059a07191cbc09a44df9e7ea50d6401671b1"))
    (103000, uint256("49201fe491b2d2f8af8c1643a37c59b743d30a836d22aa9e223edee6aa67889e"))
    (104000, uint256("f41512e94e70a922c82c2ed47ee69a52bee2eb148ce5b8944029b75efa8b8f94"))
    (105000, uint256("93994329136850c61852f8a104b66a1ded91c18da46c1d5f0ead51f2644fe499"))
    (106000, uint256("59d05cfb7377b614139608d79d21e5c1b7ffe86d70ba498a12e5bc2b305bfc99"))
    (107000, uint256("ba4a71bff180d5fd209d6c4dbfb6b3bc9ac6b351fe62a4f9cdb199dcb2bf1b69"))
    (108000, uint256("9d4003640e29fad57af58fee116d23090aa36eb1b87233c84d0d6171eddf8689"))
    (109000, uint256("c2c268a773fe9e683481c45b9a08b6a0c663a1f9c5d853c13db7c225bb8c141e"))
    (110000, uint256("689e16c6f1c9b67634896e0815f7a50c36bba517b3a6751cfeac5e2dae388f14"))
    (111000, uint256("2f37dc3acca91016eafbd0abdf77df357f7ff818b22f4709ee7a155cdbeec36f"))
    (112000, uint256("daf0d6c2702c85d7a64db79de99d0a3653bd24dac403714082e04323c6d22a86"))
    (113000, uint256("3dadece08e5628d89fe665583efdacb0ad5bcb3254f9b09bb2a9fe97a6e7a5ad"))
    (114000, uint256("6c6d816b9e5d1a6bc8f34145aaf9a2c20001c3fb54d9c30674e9d615475c251e"))
    (115000, uint256("831e59092dcfe8daa5a8895413b3768bc441908bd226337a5aee819efa69dc5d"))
    (116000, uint256("916046079da289cb5cc35c68c9f53d1953e379da01fe4c0c6111ce904df43691"))
    (117000, uint256("cd862ebce74f2e6412e515a77ec06c7d76bd843fd9d443cf17cc2de622ba40d6"))
    (118000, uint256("a91ce6691520944886032e7a8e485d7952df2f4b57cf586b4196c70b469dfcab"))
    (119000, uint256("7f47a78d402bc06f145bf1d95f45dd0d14e1cc917ce16ba92d54e3d393cf0cc4"))
    (120000, uint256("dd3c2fcc438777069389aa37815a5f01e87ac122eb1845b21e33b1a3f496fb31"))
    (121000, uint256("aeaba539e4216d4a11cc0a10df8c4cc463676086f3074ff1d83b9c3fc6a0997f"))
    (122000, uint256("e738ab7a36aa30c714c7ce5cca852c97e02e208a168716b04803fec88281104c"))
    (123000, uint256("b811a8f1a43be35599b97060580c28b3d020a0aded2bf0c6c83fcbbf866b9607"))
    (124000, uint256("5c066cdf3d0f7bcc4476582e2f894fdad34aa65ff403f74683dccfacd2c4575a"))
    (125000, uint256("4ff0c6b4dfe055a59145d974222124a7b583b8ec0a5b61a669ea593cf7ea9fe5"))
    (126000, uint256("ca2b7b42963f4b38726a9fd551b45de38913d8796fe7bf5b7ae9e99563dff034"))
    (127000, uint256("c25d8818432e1ca62b3c7fcf172438afa16c4e57620eed2f3b55df87ecc9da28"))
    (128000, uint256("5536522135aa09cc756befb7181aeee8237d93791dc100ebb4dd524b6015e85f"))
    (129000, uint256("417dfce66aea35ef3bdfcce40aeb470db9f56429726f87ceeb641b734c47c549"))
    (130000, uint256("9d886e4c4581df360023cc6f45fbd649b90934a65b5061beb08ebc527eb3f31e"))
    (131000, uint256("f7deabb909fa5d1468ceb60f6f5bf2aed5c5c240cd6a52224fc1f29547408bb1"))
    (132000, uint256("55b9965112333aa74aef67d40b03303faef7ba08873e0d70fa228eef03b42c99"))
    (133000, uint256("c8dd77e3dff8ca7b999d31e3397ad8f8476875dadba20588ceb7abb7f776dec6"))
    (134000, uint256("ecd97370f81ae0f4c7c505316f3039650240eb5b7900cf36425c6a2330fda590"))
    (135000, uint256("183c03dca04a12e7ec8e1c2c97d687a75138ab1be348b2442a973d72d849f51d"))
    (136000, uint256("819c46d4acc0715fa21f46a29809967fa1308ea290d7de8106a10736440c4699"))
    (137000, uint256("f5b6e84042c71c4c0c6dc4759e7736f5d16b13131543d98a4215fab4204ce59b"))
    (138000, uint256("167c90c29edae618b31d29c9cca9969f6f117e91beda7fcaa5b24417aed3e313"))
    (139000, uint256("9a73babb9c5f31201a33c520b5410dd601a86264a7edb9a5a8137bc0bcefc173"))
    (140000, uint256("4c8e03a12afef098d97f28be125228675f31ea486936cc78495152629f1a07a2"))
    (141000, uint256("7851cba2d3eee2da271d9257d304ef64ac0dbecad57889a98783ee5fbde7869a"))
    (142000, uint256("3cd7e29cd51030dba9d248189962dcbe7be035f062d039fdcd4621b0e9672aab"))
    (143000, uint256("10ae890f68b55dd0fee2c1b010705c7d0667ac55812e2b71d26eadd8f4262e3d"))
    (144000, uint256("0a0bb0d865082bc49ba5a5d7e031ed75756492b84abd95787f43b7b2a450b3db"))
    (145000, uint256("360566431a538f0981634669fd20605d9807c545d5c2e1dd5727c52125dd5c04"))
    (146000, uint256("ff9f4dd8a9cdf0c7b2312282fb4eba867e38c4f7cb417914d323db03137a48ca"))
    (147000, uint256("311ffae6c3336031b09f42f6aebd5ab239f58c365f578b1c49969028240df0a3"))
    (148000, uint256("d1f5068389eb9cbc3770ecd53a7a93f1d8642a951b99eb791f177e6fd52276eb"))
    (149000, uint256("7550f3a56c94b6c127d5a4608f2d6847ab0707f095719e377eeac28fc8877db2"))
    (150000, uint256("08b003be2953ea623f2d265047e143fcdb719994331c436c6bdeda0ddd6d31f9"))
    (151000, uint256("1bc052f3aaaf487eca2b84c2d1df5ed96e5cd0f0b55563ccbcb4fe21db2c14dd"))
    (152000, uint256("00f4956c56c8d2e1b00827bff8133f667abd648c8afa5a0116b382bc6ef6a45e"))
    (153000, uint256("3326109f7ce0892397cdd7b5c32034b5c4f3e2e4bc1f6a278ccfb3909e381bec"))
    (154000, uint256("fd156a62a2fce01e7a846380145b197e39b2fbe594678e6170d3849c55d0d86a"))
    (155000, uint256("3dfd83d5cb9ab10c16cca60ae172e81e65d04328865322f987ba44c9ec1bbc6c"))
    (156000, uint256("50cf5cbb6e5891759762a4f7fa3773ef46534ecd37469cdcb5964e809b3a5450"))
    (157000, uint256("84958f73d071baba88153cda723fd9643a19759e84166b00681cb000ff7e93a1"))
    (158000, uint256("d7efeedf5c48388c81671bedd9fe27eed6931e1f5e69398e5f873302ab14b4ab"))
    (159000, uint256("39e080158f316a2e828b043042bc600958ebc6ebc77d88ef2e59eaa2fa722f9b"))
    (160000, uint256("6cb1d85768a982766e1947f523dbe70863cd363f0f63d922f76074b1ba93d89d"))
    (161000, uint256("b8d3b8f5091c8c725546731d12742d61d614b4937d9794fe29157f52d2dd84f0"))
    (162000, uint256("779e9a95be25ef6397fff8afbae6d8cb3cdaaac6b15a6a692eda4fb1cfb0c0f1"))
    (163000, uint256("7ed2407227e27314cf2b69d4ca1339e6b6fd3db6f9c9a58b41d5a7685517ae24"))
    (164000, uint256("92c1dd0799cc8ea07d3e5aa6ffce787b6080ea7f0a47a5ee3ce35fe33d6e3c70"))
    (165000, uint256("5f9b37f360a906ba47a50d9706fa0c5e3273e41464fee771a7cdfa778e29c02e"))
    (166000, uint256("89e3bd7ab79ef2c694a85752d995e0ae9ac1a9cc3ffeff4903dd2f4473a2b2d4"))
    (167000, uint256("70125d73fd4cd3969507023c40ed19b9505eddabc216d0446df6e3331488cdb6"))
    (168000, uint256("87fba525a939a13545bd5987664c64cbdefa4355e441e15e514fbe31a533b09a"))
    (169000, uint256("b91c231ca432d4952faaca63c014249bb2052a0f960458086732b1089be757b5"))
    (170000, uint256("8ff482622e4c7fcd8919bf0230c8c2628b826c09470f2cb9d5fb4134a3b4a4dd"))
    (171000, uint256("c46376456c93f80b5981943ff394c249f994355f0b2ce1a555a7a46838a0ca74"))
    (172000, uint256("5584afd832ddc363f5270e7eb246b2098861efd2b788066c94028d83d905b39b"))
    (173000, uint256("95210a43f6443ee4c1a7d1adc50dd12dda23583a2330a02b732ec9bb90b98e05"))
    (174000, uint256("a673cb1ae7896d1c6cd564ae25eab2a25aca64029e6c8fcf20dcee11ea1d2667"))
    (175000, uint256("823127cd21159664d1972d0025541129c0e7288c574f7fa24e8f8dc32fdbc63e"))
    (176000, uint256("968fac9682e800c4fd22c13dbddc857f930fc34578d024e411443b0a5470344b"))
    (177000, uint256("19d1ec5327e895be328fff7713785f6407fab3cbe254db6b4e32ad41a66f70ae"))
    (178000, uint256("088b1a8c496c32b28bfcab3b15e2c81f3cbdfff8ae46588a1fbc77ab57e3507d"))
    (179000, uint256("53e3ae4dd58197984611d2351f99827bdbe5ccfbb8cfe80ff34a38096762721a"))
    (180000, uint256("853171e64ec3ebf757f38e7735faf35bf72529ba8a682476a79c66ed979a206f"))
    (181000, uint256("8a11715ace52bbc2a0109a4138e90b7f407996c51df4bdbc6c61be9b63b354cf"))
    (182000, uint256("aa550fc2de0f90dc038de757d1ccd86c83e77fd606500cecf95b4ca246952913"))
    (183000, uint256("d9db09f8eb070577734e3fd29f55becfe906daa1c12d809111726ae6160760a5"))
    (184000, uint256("0c92455d29301296ba73625f98b4f21a1d42ea1cde9fc1014c37de6c0301eb2f"))
    (185000, uint256("38eabe3a1d3db230c4ead5ed56688a9a9a40eddb6ee922d4e428d049006432b5"))
    (186000, uint256("46b9495982f6e016652a264e31fc28cda88b3ceea57ad5583bc1d610e6f011a7"))
    (187000, uint256("3133ada227db5d33320fb50fb554bb84855e9b25505fc826eb324a37decfbd59"))
    (188000, uint256("d0b68d641093564e6fae5e45b977ea05bb768e3500a10f2185647652181ed463"))
    (189000, uint256("6144c42361c46f1affbbd736fc820e89f8fb1db9642dadca3cfded963fc4c783"))
    (190000, uint256("07ba17b3c2df60e3e3492411b13faed1ea8f5ee1699ad1e39c47839691071e52"))
    (191000, uint256("e6ffb66d731d71660bbf43224f9d1bcedf7a85a155a6ac172bb8d2958beef5ea"))
    (192000, uint256("5e03dba9a0accc046ec560ecde80e9a98fad172ac8664c7454305a18217c2720"))
    (193000, uint256("e198f39ed9a5ac196894e7224569f00a9416607a25152068d6f375c019de7b43"))
    (194000, uint256("0964923d429411509697b53d7a1c0e2d6edc404392eb389e6879468f2813a5d3"))
    (195000, uint256("f7a9dde48a4e506e42406f0d177a9f474633c8e0cf749f68a11d8f9e8efa31e7"))
    (196000, uint256("d325e5a2a5630b38fe748d664f33c004d4513ac0880420d885664d2ee60ca620"))
    (197000, uint256("6f47bf8aece68a254276d8435c9c7be63bedbc674425c51e4a5d5b869b1c9d7a"))
    (198000, uint256("fb9f6c80b8bf75681564d76f189d1705641f2ec84eb20c513af1e0bfd1337a84"))
    (199000, uint256("ef6b80f80693cfcf43e414f93ba1474dd71fac7ed83a7ed1ccab9dfe922c17b0"))
    (200000, uint256("26c50f402c45b2685ef4f421bb0672e906e445d35045e0fa26c935c52c1a4477"))
    (201000, uint256("9e11692cae692a542db74073eee456ef14cee76e5c2f92d634f00e2e17dc5676"))
    (202000, uint256("8a273f1f675ef61407f18bb20cbf6ccda9fa0973d472738dec7c630a835b58a7"))
    (203000, uint256("a567711bc2c3683f02e6ac652c512cd1351f4c662f106e224afb2b4952173815"))
    (204000, uint256("95de813e399a65b23222e2f479c0ca78138ff8eac3954799b0f0b55f15ee12d5"))
    (205000, uint256("7dd0dc8bf136595be4978d8fa24b843473a193799f3193fe2eab279fb82ddc4b"))
    (206000, uint256("89062f9de431c2c835eb0f3ac82dce976495669202d6545d535ff9eb967de031"))
    (207000, uint256("7aecfbfc76408ccc4c8c23a83a015bd80b4b5108bdaaf75d8708f36cc8d9ba5f"))
    (208000, uint256("ac8a25da5401a417135a640a360ae741adadbe798af88164b00c0bbb52eea045"))
    (209000, uint256("4f60733b42cd9d9e38bd8feffdbfbedf1ac9beb38a9bdbc818868e155113974d"))
    (210000, uint256("3f4f13a141fbe713b89e1dd7fd7a7c28dc76e5ec210404f74b6b473f3611fd32"))
    (211000, uint256("60b8c5bf5296bf77b56fa5127b88d1a6971274965ebb2b810b0b05e5db4d5b2e"))
    (212000, uint256("d77172c4a4d92091cd456791430a508e93bb0a44420c18a7696870e7a9e78415"))
    (213000, uint256("fa90a1e3e5823987d8ff0dd18aa48b3ebdd15cf3a0b25a0c8a7f77d7664f7198"))
    (214000, uint256("54f6b69920a6b7936c54088e58c016c58946ff8c893def9277ed49a86f1d14f7"))
    (215000, uint256("6a665825ae502bb2aaf2ecc73001e145389c552cd739edb5a0ea89afdfeda2bc"))
    (216000, uint256("b59299f98a869d02035cb42fbc8264340761c4e0aa3e9ecbe11778e9099174e6"))
    (217000, uint256("051ab340dc19c2a592e545e96b769a69e09a5fc620079609210663b02a1a8cf7"))
    (218000, uint256("e770ae2918748555361595ec6b5ecc880736422bae73e9327677a2ec5d5c73ec"))
    (219000, uint256("e427f87b146d1316f04f97085b5c7ce99df78e48ebb1baef384b242e0588036c"))
    (220000, uint256("079deafc9074468c249a5bd0dcad4685ca4d51a5f0faee9e85117e380c312c13"))
    (221000, uint256("f16b87ed89143ba4fbd6934fc445f35eb1d7f612cebcdbcc6d4831b3ca2dc792"))
    (222000, uint256("ed35b5d82594adcb85a0a50c2a0b1db601927b8e442e599d35b9fd00b56d7e78"))
    (223000, uint256("0a77f4d39d63ac5e72a065cd58dacc8560ca9795e33375b8b2cd077ba82657e8"))
    (224000, uint256("b5ee4d53f4a691fe122dbcd8932b7acbac1b9d3260e8ae6ab65b87fe8c2f3cdf"))
    (225000, uint256("4d7b9c9043c7bcda9a2bfbfccb4311b06b0cd42aab29ea88e2559484113d7a6c"))
    (226000, uint256("6f03a654a7cd3666710ddf236024988af85976e46fa561f13216bb2c150c978f"))
    (227000, uint256("7b1273329f406a93c653d1829a964eadc1451d85b644ce4f0e5996981f6a8b4d"))
    (228000, uint256("403e924daf027d6766c327ccb82bea50db56194b966c902a4bdec569375cb7d2"))
    (229000, uint256("932d6cce3aa0a2691238f8e87e7779fb05bcd887f650c64a6de9b8236c1caa33"))
    (230000, uint256("6d3f1e87d785a5f1f266f800a6d903de5519845b89f8844da534c8505fca3a7a"))
    (231000, uint256("e6c8724d77a938baaedb716d68396c19825c2136a9bc6018fe4635db9f8c67b4"))
    (232000, uint256("7a7548d8dee34198f224313666be5ca5357d9078ae6b1f4fee9f8d8d6a5a33c4"))
    (233000, uint256("b73e7fb4c56e53735352183a988a216dac50b9d56a966f5528b639c3d9fc7d8e"))
    (234000, uint256("cd4c472be556b2a3de893b5a229abe6e5bfd223173724927a3885f52403e20e1"))
    (235000, uint256("39f68e9d9223ff4901e9c57a03297e50aa5d41681836b84b3236f5cd7842f0de"))
    (236000, uint256("599af050645c1316efea76168d4f47f4e4353dce15da020e8c25a5a43d89cd92"))
    (237000, uint256("7f9df5ba9327eca57737bf68cf211e2af10d0e6666ab910b8d4768a4a8c1cd52"))
    (238000, uint256("ce35d7b284e72578fb6b1c737c8afd81378b2d55e664cb04c3ccb1c4f86eb405"))
    (239000, uint256("fd0855ced0ecbfbe87f828677dce4e10ec6345be9f521c96110b63f335fa154b"))
    (240000, uint256("85db93cb01ac79f444169d9e0a3fcec32ce2d07e129fbdc43965f04632ef2157"))
    (241000, uint256("d337fdd45da87241bed9e03eace89cf3308eb37471f71e1d585b04b22026565c"))
    (242000, uint256("c41941ebeec27dc53c0c0cff230f4e534e901d3f25a79fca63b1428cfa629c55"))
    (243000, uint256("929caedd55bf9da8258f015c286d1edef0b4c1edcf665b457c2f68f7fc1f847f"))
    (244000, uint256("57c8c6f92c081ea444409a8493923074a0a2ad6ebc0b890373d02ca64cd52ecb"))
    (245000, uint256("4256a6c1a33d47e566a21d942f9bac8a19b92ee86f72db9e89b1007c8eacd99e"))
    (246000, uint256("9a9fae4da7addbec1caa9333a475635bc582959f47409cc6d73617d3ee03fcc5"))
    (247000, uint256("a3c22ea59e3dc7c4594d7b1ea6248cc9716831bd330eacba2d9b0020077a9447"))
    (248000, uint256("49ee30cc4ca186900e40aa040fe46411ce68745e6ce70c98150834c9316269dd"))
    (249000, uint256("c11379ec7357a104b7f6b9359e0f0b0e402944be80b59d315307aa9e0e0f038a"))
    (250000, uint256("4d922d40734c701e1254ac7370b7bcd0069e1535b3959c667fc76458e25d04c7"))
    (251000, uint256("076896bae262100e75afb28bf7b25d165b919302ec43f82be12d80f0dbfc7d85"))
    (252000, uint256("08aa38105c4c567dd7c8107223818c5138065e6cd2a004114758974c1b5d7a02"))
    (253000, uint256("913ad7843c00ccfba0dce8e886732f9e01aa30297061060185a777830e195ee8"))
    (254000, uint256("77910b6f0d7f9fbb894f479a3aaaf7b5acbd9bb453abe4565763cfc2165c4ffb"))
    (255000, uint256("03f1363737eff3a500bfa7f0396f8e9c6b8a452b2d1e73b71e87bb324b4afca0"))
    (256000, uint256("80020cea2d50256928af3e8ba8fdae530ca0e1d21ceda00475b217e70b94c3f9"))
    (257000, uint256("2eb43d71653cfa479747a57fafc9cbe0ffa720b0a721f34fe343240652e3227c"))
    (258000, uint256("1a3b232b392cbdac36de3362d87af9c0e4f075e5e80840c7273d42fdd538ce1d"))
    (259000, uint256("141d7c92944cbfa07fdada04fd2aec86e09b5250f9f02cf1f71e816ee29a08d1"))
    (260000, uint256("ece38ca63bea1b9a6f7efe9a21058b8fd813e31d058239699c36dadd4868e6ab"))
    (261000, uint256("13a215986a39dd091ff74c88455a723548a237c029f7a89944e0005316570fd4"))
    (262000, uint256("58f888213731a903ba726649e1dc75a56289a01f54627a74b0c2ee0c33263c12"))
    (263000, uint256("c44827a8bffb832a23d7788dea9e7a14fbdfb8dc2d24da41426df6adb24e4d6f"))
    (264000, uint256("94a7ba02c709d6640fcdc5a9fa41e3a9b990d6b5af4d179c0ac20a733384884c"))
    (265000, uint256("89f8929734f9a95a54f6633fd026b4113f2519e10e433e78d781fd48fc4b1b82"))
    (266000, uint256("a2b978f4c46db1db9bb2df7368a9cb49446a654e24a3910be7ca1a64db475d12"))
    (267000, uint256("4f83e6172719cbd2c4304621cd0ca9b5266dbef23a1117dfe5325048177725e8"))
    (268000, uint256("bc8e079b7aea08d79a01f4152997efb59a1ecc762473eb057bbb25ebf13d86ae"))
    (269000, uint256("9dd7b3d4d696edef986f462083b0b00581fd6d66381be9f0cf969c939dfeffb4"))
    (270000, uint256("d48ff295381bef2dd02aff37e78564f8583ceef35b81298a539b60580a209f02"))
    (271000, uint256("6907fded41072460de4de651111eb136fbb4534cb37e62c2afe67f3b5c436619"))
    (272000, uint256("000c843e015cc1008b0d8d60908a8527bb46947553ef4e22434a5c40612ca911"))
    (273000, uint256("5f4d8bad98a335d11da3f8d86c35a24bee0c3d9140da271f56e191d4fdaebb20"))
    (274000, uint256("23e15c3771c0b56054df89962f79efdb15ff931bc8954b9c5eee4c11957c642c"))
    (275000, uint256("f9368ad6fbd9d7a26ea29bae0398f86f4e46c9b223e2ec62f8eb8d38bc18a69b"))
    (276000, uint256("2bb80906dab7775094e68195c43afdca5bf0defacb89ca22c1a9ba366423ceed"))
    (277000, uint256("18e3b92ba1c8dcf53f2ca1eebaaeabeff8a802ea9d5ba45913e5aa39bde821f9"))
    (278000, uint256("3108f4abae3e092811705e9048a09cc2e3c5f0a488b8e62206959f6018c5f3cd"))
    (279000, uint256("a6edf62897d6c32242c6fd0d3015e4c3898eb6324eb3d9d781cd9d92fe73bde7"))
    (280000, uint256("edeb9b3b3f565a74c7487a7ad25753c823698e3077e3fe6330dfda707c897370"))
    (281000, uint256("bcd47bdf7155438d24779d6afe727d038b7e62d13afcc22e5c234f05c00d363e"))
    (282000, uint256("ac71981f534069f475414cd2a98c883ea99c03322b182f3990e7537cdc19239e"))
    (283000, uint256("b0fe686c09ba05af11343b847ea73512fd3e0a79a60585b32848df37cc6bb710"))
    (284000, uint256("af7955f79d99927ed57b37d196890c829a5110a71e5767ef4ee9e19029c96995"))
    (285000, uint256("1ae7505270e10ac243b79fc1c20c3ebebdfba11b9774d966333b020c93773c8f"))
    (286000, uint256("664fd590ec4c015204686815f5b844ac75f2b3efdfc4d84f3e85b5947fb742d3"))
    (287000, uint256("2e413b5fe6ec609625c9c756d0f5a5022f6410bc2c13292f1fd620d475650a34"))
    (288000, uint256("cda0eda4529f1960ac5eb4d4226eb667d4c5dc03389bbf58d698e824f25939cc"))
    (289000, uint256("cf01be1f7bd33383c375071d0196c4d0de02b38a92486d247774484c165b8ada"))
    (290000, uint256("18e0b025364bcb89bebd7b6563764ee202e941a3a7dc812a9e94bd912d3ee3ac"))
    (291000, uint256("3f76f9b2a4678ccd9b1ba50551ee2657effc97949cec085076e0f44804693408"))
    (292000, uint256("38e9539b916eb6f63765c997b34bd3d7c5504bccc4e487101da49bd28422f8f5"))
    (293000, uint256("edabf3e27be68a3dab8651087fc0ab8b9f6f8476ecb3755cfe264eab0b81377c"))
    (294000, uint256("0450cf8bc3d4491c94fdd5e195ea4ac741e93d5a54f95b71c90e385fc6439932"))
    (295000, uint256("7e6bddde18faad04c59c1e1aee10036d41bb3e625fe9a8a71d9f1764d4383d9d"))
    (296000, uint256("60743070d6db11a40360d9765bd81112f5f3fd56c99697353219302a0e7a267b"))
    (297000, uint256("ca1f5d3abd12b2ebd48a9c60f3103e22c13161d5f61e0b5b5ab1119518b07567"))
    (298000, uint256("bef2c77228b712e26b7bfd8f781e17c7e9f2b268c320d91100fbefe02bfcbb75"))
    (299000, uint256("a560d4e2e8ec35147fc565686f05a86fa6ae517ad5a4c13cc1fe9020704b721c"))
    (300000, uint256("8293d5f43ab70cf85b54977efb2c927675c9ddf070b64151b4bfbd528116bd11"))
    (301000, uint256("507033dd901e8abb73c61f5490949e92789149ac5d60bd4d023ad53f3648023b"))
    (302000, uint256("67e2b28976bf486f5585c8ca5d49a6e4eabbc0242b9c27ebdedc16eb2595ed8c"))
    (303000, uint256("93a71a718d247f97a768903d035f4ab71949eb90d1756e7eb0ca34535938d614"))
    (304000, uint256("84d3ba03f9d40adb5576af9645fb89a4875e71a3dc7e6b183e8389bd6ca5b403"))
    (305000, uint256("04ee59904919ce6bcc3f930da8fc922e3311fe1b163d3d1a9d37f66f3e2fd679"))
    (306000, uint256("d277104c76be1e3762dc5e1dd81186e6c63b35cf08f15db7615cbb11798cc6d3"))
    (307000, uint256("f3c77915790e3d5e7a27c641dcab4d710326836fb37530e7963128d2bfd3a271"))
    (308000, uint256("2b3338c9e55978856c6903df2dcce6b17d5dc842cda6fa8e4c0c86d8337bd9c3"))
    (309000, uint256("2c1a4d06a46c40cf6c128f2a98a14053cdcfa320e5206683a3063ee52859f179"))
    (310000, uint256("6227a3c1f763446508bec1462fbc3625fef420392b77159af7630102a335a53e"))
    (311000, uint256("a8df08b1b7d77613268fe15d885db3b138a009da3a86d37a832d556ece3ab84e"))
    (312000, uint256("eab8d97979c878afdd160caccc2ac36bee1e584817edf0b21dcdb188cc856e8f"))
    (313000, uint256("3399a3e722f856587188bee53ffe8cc9ef6882060f407516a11e5c2337e6d253"))
    (314000, uint256("f7462fab1d748dedcf5711be507bfdfcc5aa85c6858968497f1ec947d277e499"))
    (315000, uint256("15df7c873dd954e02c9e8573970fe8c26125138e8dd4c9991d78d9c32ddecc34"))
    (316000, uint256("126a4b86f28dce46f79cf871b2ac0bdfeb6cebc831ec7b6b2554a8e2c14f735b"))
    (317000, uint256("caf54abf6128c110cab8c775bd1c2d636d78dca98e5ec8dbe6095f81042cf600"))
    (318000, uint256("e7c12e43dc703dba179d3b2faf3bc83a5551658cf7f3d3236ebe7ffd060afeb4"))
    (319000, uint256("3f72b6c1181480a0fd8f948f6450d240656254816f5f416d321eb0560d54334f"))
    (320000, uint256("d44033c329b9b4b86b3cfaf5595d6918b2948f99f8c03ba71ffeec92463603a1"))
    (321000, uint256("e1d2d08d6f02d2d2d282d2ec702a376266011aadfb8dc375aeb15b5abc9a8d98"))
    (322000, uint256("40e81a07487759569d599554c498885d12f3b644009399d9e69a46057607768d"))
    (323000, uint256("c53b5b93437b0a6af516973979ea066ddff58fc86bd3df35f29c3f3c10cfe5ca"))
    (324000, uint256("95d717f346ca728a57761015e1c79961e12f36336c0a1922f5458cd054cb085d"))
    (325000, uint256("b499ef201520532865d9c0e6188cd34c7ffa1b5a264347847188f610b2fdbf70"))
    (326000, uint256("0adf8a3ec329c05ac7a2cd4cb634bf14230a8edca88ecec16533b7d3d9fa2785"))
    (327000, uint256("a410bd67168ddcb83ae6b5d7da83cef9e8c70fdd129eb098f4854530e44f6115"))
    (328000, uint256("d6f5d00eb16a3d336a8108da50fbdec69cc790eaa713fe89f50f0f87cd6c4fe0"))
    (329000, uint256("8574b765cc7ce42df78a826831dd0847e79d14bb83e82c708fa83ddc68661349"))
    (330000, uint256("5c8422bbcc1626d91c4c9d948790b29a2fcd09b375801275f3f6b0521c11f3df"))
    (331000, uint256("5d6a077dd6e657eb3a5133e4f92e371c2e67fa92ed22b7efde52e0106540ebeb"))
    (332000, uint256("42c5a0f9cd7b7adffc0e327a533467a0c76297c4b19e4c25003e65822aa184a6"))
    (333000, uint256("56a22caf71d9cef109369cf8998ce8c356ccf78d667620f3490b2c76c1dcc7a0"))
    (334000, uint256("b5e25b4103ad86fe75a7c03afe080b88252dd8259cac3384983a072244b0205d"))
    (335000, uint256("9973bdc4936af3df275a7bf394fe96cae31537b2b5e632f4d7b18161d5db4997"))
    (336000, uint256("2c81638351d4a85ab79cdd8d7c05c7cde7d2dc3562851a200ca446dd455cf877"))
    (337000, uint256("e4e6d31eea164332c388af4915ec1c0966c68fc1d137885ba24af8e0e8bda20a"))
    (338000, uint256("344699e1f9d4364208679e1fbcc41fd1849b2bdb999e8687a2252692142bc008"))
    (339000, uint256("77cf927a6a7e6c2d495a127e2ff925f34c8426035105f94cefa59e9797ad888d"))
    (340000, uint256("a5352553b8607c8ddea873296544e0a324516a9db4ae382cf75d84d69913adb4"))
    (341000, uint256("4e45d8ed8bc0d5107563b0e375d97b5a5acbc0aa1236b746cf6a2e89412894c1"))
    (342000, uint256("5ff79cef442cb01f4620efae56daa51c560eac10a2bcc67d9faf6f753530af39"))
    (343000, uint256("a0a1c751afc86f60201cd34472fc56ef09e045b59127c8885c5e4df2404df386"))
    (344000, uint256("1540b9e69351e4115ae513e4ebd2321548213329db96e7d75aff3319933f63fa"))
    (345000, uint256("759910e22527f5ce9e92d03b4b8d0c4081662a7541abf26a67a3394edfe453f8"))
    (346000, uint256("abe550acfd85d0e271c892af87a712c3be9163dd8046efae315bed171381a470"))
    (347000, uint256("b2de8a0e94cb65c4fde734d59afa8dde94f415752ac8ebce55f1f4287efd1420"))
    (348000, uint256("f314d6e96b1938cf319336cf203d6c3f6c44f5942ef0986abddb82e521061266"))
    (349000, uint256("96792cb86432beeb6efc0f2badf21fd5dd703717453d368ef73d8663a2bb218f"))
    (350000, uint256("63dfbe6788b5a4e07747a5d9a4d1a7f7f491d9913b22bf1a9a527108ed8f030c"))
    (351000, uint256("3f246c4083be1c7989a60eb90eea875d3609252538c6da863afc7becedc85ea6"))
    (352000, uint256("e761bd9b996d171bedbe00353fa4ac4096046bc5daff4aec280ce58e77d65238"))
    (353000, uint256("13397a38ace9ca534e5c048fe20f3cfb9cb6c442b8d47dd5575b692be99ee3f6"))
    (354000, uint256("90e89bc1d9a1a76606535bf54103b0cac61e26e1873a95d56ba5ef471238acce"))
    (355000, uint256("1aca86a34726a9b0f484d0ae0a85577d01e98569b0711123bb1a4fb334a97112"))
    (356000, uint256("9a87fd2e3544bc53cc11512220a2d29587b344accff90bbbeaf22aaaf8b11447"))
    (357000, uint256("e2a2e62db5b68193783e4c2556dc286c91dad4546ed4a50d69d77cb3d1afedd2"))
    (358000, uint256("8e706416aebf6de26530a7e90157813b73ab64b95cc15102c6948e905e06c123"))
    (359000, uint256("34a175382714c9d6fe0de19de9147789ec23c8739f7e299e2bea3936d8ed3709"))
    (360000, uint256("d14bfa75d8e00d2e1d71aa7c1655108607c674393306a9da39ecca8404bbb22f"))
    (361000, uint256("bf278bab31fcd318e819abc95248e1f940deb522ddb9edbad496a79e45a7ce75"))
    (362000, uint256("b98c2c8a8700b7589c90b2bd506bc4df6dc32723144caeafaa93be3e944466c5"))
    (363000, uint256("07316b24fbd1cee366e3d2d1ac60941fbae5353df0f5b556b3e76fe32e4734a3"))
    (364000, uint256("449d9f5652b04f6ad9d5e5a8a3ff81a8257583a0cebe033515dd36c3c6062868"))
    (365000, uint256("860efe19e5d6add982e9ef9cfbadef2c7dc781949b147890de501331e997f611"))
    (366000, uint256("1f3ede35d9fb0842e81b22667a583509388b923c81f613475a194c0459fb6801"))
    (367000, uint256("371c3cd79b0f3c5937db56c31154ddafc5f55b479927fd7872ac0f3a0c78ef27"))
    (368000, uint256("4f9a3fe77fdbf06a2983a60f87f12fc73ab9c8d102b7ebeea6acc2d172019275"))
    (369000, uint256("d1fa5925350e737b10dccf3163424bbd3a7e478f8e8787220f728b825269f213"))
    (370000, uint256("4f19397d581c895d0d09cfe2910263741a6a0ea581270eaffce660ccdf80b1ef"))
    (371000, uint256("62bfcb7a1bca1a7de8af4aba43424ac09dabac24e4906baa9f5323b29a90000c"))
    (372000, uint256("e81b3a1076e856a00afac6812932a13cab1bd167dbbfc11fce35cc89c5b8a8c6"))
    (373000, uint256("b8ab939ef86f3bdb627d67a917eb686dc9113a2f6d9fa451eb407aeb93518cb6"))
    (374000, uint256("05f46c469b7d3c2b6dba5ab01bb0939856191496e37c225899fdc4175a73e006"))
    (375000, uint256("e1b52e55fdc435ccfce0781f6f431478b58f4455f13f47e6a845cec16e2d83b3"))
    (376000, uint256("7bc51d601bf868de5af6936f96f131d6322f038d91a6b1687262cf05e9bc62f3"))
    (377000, uint256("7ba6d5d4954140e42ef49ca25e85d771c19d846fc44dfa1a4b57e298bd731d72"))
    (378000, uint256("6aac142c8cb55121d04911a45cd0735246a89754eb49b7de669b4777e3555165"))
    (379000, uint256("85c0feec9353711be4ba3f5e835dd5052fc878646799cccf8eb8f51ee6779f97"))
    (380000, uint256("3281c611b5ca2404645f1021efda0a5f7f2406e6f3fb53fd1fafad5394f9d428"))
    (381000, uint256("e430097f775c73e9d308fbb09dbb3fc28cb29afbb84bc87a608085eebb2fe0e1"))
    (382000, uint256("bd7d0c081037875de770b3d98ad4ecaa6680155eb8b68457a4c8246cc790f604"))
    (383000, uint256("34b1efb0776681c826b975673d5b3aeacd816c26e67673d04e6f1fac86703051"))
    (384000, uint256("f0c3a03582ba1356ae101344ed1777936889b2b39875868109fa91d41e056f42"))
    (385000, uint256("b303aea2cb7a4a741de0ad1cc966ee4ad568e7a85383aa070c458e79f1bb60f2"))
    (386000, uint256("717146595a7dee5d07e0f54bffd81c02dd1050fa9f2fc7a5e66a4c32756f0dee"))
    (387000, uint256("c5619ff228fca66918ae4b59dd93b6e4e43bb53e28baa130ad5e0c263478b08c"))
    (388000, uint256("55bc7f55afe68cf3a501da4eee92e86494cd62a823eb3db47768f096457c6857"))
    (389000, uint256("3b40f00342f9d3bbe4ccdd21ebb650c4c03aeed7aa09e99345b1d562f0f28a14"))
    (390000, uint256("98313bd11de9c2288a9bd032100010ad9dd10f007ea09b301576f7602b83693c"))
    (391000, uint256("5c907b16443a4003e9a6232ea4f76fa2fc53d18de75792aa7b4c8716d904ac65"))
    (392000, uint256("c28ffe1981c844aa089507835f0f26ecdfa71d972b79c7de2207453449a479f0"))
    (393000, uint256("932f6680d485e258b5059e9c23b2fd13a2258345f207dbbaed0ed8a1c1c2b104"))
    (394000, uint256("c3a09fa437f61ae083ae2a610b0642cb24f3fd1b5c864bd7dda0e2af59f3cbf4"))
    (395000, uint256("a1bafa0741ce1bcea6463a2488da4a649c966f83a4f79c04620ae5b05fbf85f4"))
    (396000, uint256("7d89a0935c16769dfcb9cb3acbc413f91f36f5597b6c92d6d52e68ba8c06fc27"))
    (397000, uint256("0b8c714ebd2c83f42d7ddf10a5f2aef4c7b87449102ebdd9ce0185ce3c01ae80"))
    (398000, uint256("09222c750c9aa295a47dc9fe028413cd6b9b60e278560909077e211fcda9b4f9"))
    (399000, uint256("157a4a92fda5e09c285c2ef40d655d8cf96610c04c074e9566e36a58e72e2318"))
    (400000, uint256("d24d6d0690440f022edccb65e8afb92bd0432acd73abeedd2e2c098995f1e5f2"))
    (401000, uint256("66d769a67c6e05f30098ef4e17d2b891abb8d248221199910606897fd747aab9"))
    (402000, uint256("cd2f492c5c679ad55e7e513023384eba61ea9456b53832651974cec3a64f2386"))
    (403000, uint256("8e00d7786d8ab89f08d568aac57b737637b6fa6022af7466f9c536c7020b6389"))
    (404000, uint256("d4b31a6cd3c5ee5386cc5a46d159ef94fc0d02240f79231822ab3bbb7507117d"))
    (405000, uint256("cd96d1521fe577bab11bbc44968bdc0f22db20fc927c73a89012296c6e200203"))
    (406000, uint256("6fc4b2d5d64a070e258374af4cfe404915640017077d72f7074679ad41915ef8"))
    (407000, uint256("998ece4a205f25e6b7be9bb31b1a21faebd394fe37d19025602f2eadca53b307"))
    (408000, uint256("2af5169cc9e5f2e3d0277a3c088807f6244cb8c2af7eed6972f444b5b3182485"))
    (409000, uint256("1bc45d2b7ebe3fcd7475da6c897953e1561ce3e05ec1fcef970bb50a31cfc0da"))
    (410000, uint256("d456c357a9344db916a876756402338a73ab68bb9868628a55774e6ae2b5df32"))
    (411000, uint256("f732c15a5bd6bb95ee68c7e7997c3547505358b8d1dbda7dbc2237128a7e7809"))
    (412000, uint256("64464b9be9feae09024010040902ca1f21d8942e6bffdd81f62e8f4dc7c1a9eb"))
    (413000, uint256("78b126f360299fbfa99ad16099967b8a1cbc05fcf262b07b232c100425dac944"))
    (414000, uint256("e15815d5aae65901bc13435b74ea28496f7a0b487da346883642aaa63b8e188c"))
    (415000, uint256("b4c94c825dad3d95df83025f6e8b0f3cee44fb0bb8677c82ebe723ee1d7753c8"))
    (416000, uint256("caa95edaf1c4279912c636de08d5750217ee155dfa3a8c0796990b05d61cc4a0"))
    (417000, uint256("1fc1c17e3b91b51dbf34b36f74acfc83e1f17b20ca96156e00e538ceed390398"))
    (418000, uint256("f984f3712e7b66f36434ac4c6769c285c0da85b66d8d2f2cdca4b412bbaa125d"))
    (419000, uint256("9e7f6b458281cef3f7bca6545007a867ae1306da895bac008235d8c2fbdf7696"))
    (420000, uint256("cf43488744fc31b4f450c3f216041ba6d91e02beff98514569304d1496853983"))
    (421000, uint256("6bc81a635ebc123e37593747204bf9a6e31be6b3f6f5445c97846a3aadb49f8e"))
    (422000, uint256("def231eac5f2f92b6fb6a9d19567aff63c5574dc82d6c881a1c774ce2ac2a611"))
    (423000, uint256("d3712b8f269af0746601b77faa3dcacfb0481677b94c172ab09a0742f76285ad"))
    (424000, uint256("7ea9f045cb191d578bcface6322d2d0b00f8cd1134e09d3a99d8b1dfc4aea87d"))
    (425000, uint256("03161e6747c7c0703d1b98b7c9e5bf01057e599821f3cda5e3f370584b71c12c"))
    (426000, uint256("f1651e60dd94d48ea1621b0ce3156ecadac23cd6bd5aaf7ee79dadd8b2c95358"))
    (427000, uint256("0852bd004c0599a28a2605877d2e6f84e0341f908b65f105f73fe6cb64cc3acf"))
    (428000, uint256("6e2342c9bbe93708ef64d5efddd1607904034630056324d8e46cf4d4dfe8767c"))
    (429000, uint256("c1d701c7bbd6c51bdd67cc650d7e1a9c7069d53f17f00a57df4abdf4111c2ef4"))
    (430000, uint256("dc11eaee7082b2bc2ac4bade9c28f326a7314b35ca2fb1bf36e9848fd8636d8b"))
    (431000, uint256("fb32e946cdc70c4f254d581e535944f4fdfc4c951cce98c81d283258a7a7644f"))
    (432000, uint256("1c2bac4bc58d29b01aeb63e44a6073903e6f1d0355e588d54518974a901ffc0a"))
    (433000, uint256("cf3660f11f40baa61ef3ccecf13e887eb1798e56892d48060185fc8c9d830bb6"))
    (434000, uint256("68809e8859959c25e13e8941aa6d7c93e4d528432072c85fcc75dde2a19215d3"))
    (435000, uint256("668a1f096f62f7773f8d2199aaf31b7b6067989234bb797295b1b169379f935b"))
    (436000, uint256("d0606b0e8837452cf3a8d386b86fbfd6d4a166c4f1bcf837e507cbcf5c03d028"))
    (437000, uint256("83f5df4dbf499c9cac030b1bd1cfa8eea3aae7574ea34330a7557f40684241bd"))
    (438000, uint256("b6777855163e2c1c8a5b17e54c7e77502605564a2839e76cdc83afae432200aa"))
    (439000, uint256("28b176940302536703cfdf7fd3e027690e827c2642ad9222aa334f067b279e08"))
    (440000, uint256("5c292ec392ced8b41aa90e8886790af48ef3fab7ddb8123b15aa9cd1f90a2990"))
    (441000, uint256("0dd247a862d6f0a0ea07a3f823d504addb7ca9ed963198d7575ab2f68974043b"))
    (442000, uint256("da17cfb908c124025ad51bb9582870a287054893b0b6966d3f9cb3a1a3636fe3"))
    (443000, uint256("19a9c8513a574f4b643780c845abad1a7ba76a51d9fdc087c48edb0905499170"))
    (444000, uint256("d3862e1a8c49ca7116dc4da80dabd40b594d91e5691875af8ba06c33a172881a"))
    (445000, uint256("16d674fbea15d335083a83a9d96ecba44a023c4697925956a3995d7cc8360022"))
    (446000, uint256("31d5fc0e2d603c197d411b9246e84084b2ecba89a6e2abc94a599fe053ce157a"))
    (447000, uint256("323a2c7a94caef8fc3435913e4e7948cdf0f710d06a41055154a9a1621f747b6"))
    (448000, uint256("f18f7e958538af9d34b592f1b48558363effb1caab5da11709722d621d7d9801"))
    (449000, uint256("4cd5ca947064aca9b80b4554292f693a43929739cff4bbf668c87b37e8305d59"))
    (450000, uint256("ce0ffc0ebd928a360be2ed4b3b32e4592db9b18cef1e54863aa7f0b828ae1d33"))
    (451000, uint256("4cb02ea79f5b5ca40fa203471b131adc59e41772020c9833c91529488a57a5c9"))
    (452000, uint256("e411da5e84b17cbbb18f1f449e5eb886dd186578859ff29f1fd3140cce20a1e0"))
    (453000, uint256("aab72e14804f43f32aef05b7efbec072535b1dcc27bb5c76c0dad1384625d4b0"))
    (454000, uint256("12857dd20974b4f79bcb45f0e341c6578e6bd20a13c4b628f4a4bfa649f8d898"))
    (455000, uint256("456a732d0c6d787d41ca2fa5f97e5d138dd8efce10d3e7255fc162d7e64cdcc0"))
    (456000, uint256("6ee097c0ef990919d4abf30b93cfade8538f504c11e43ab01f23d513392c6feb"))
    (457000, uint256("7ad417335cd4780f0f5197cb155417c22a7e57cf3da29ddc95f9e5f0015c2889"))
    (458000, uint256("2e6c7b79ee4c2937a414853822904f9d36b8db8cdf3b045b33b0dcb97a3ec296"))
    (459000, uint256("c7c925301f9f033257b5f4ba73febd22d56f831a4c6e50b6efce1f3d6d2689d0"))
    (460000, uint256("1c4a54950b64c55ce696031b518e251d4bdc7508fddbd0f6142e90b794d05c94"))
    (461000, uint256("e72731d1cd450c468dcf4677977b1bc065bd6c94ecd94b20a8d00424283c191d"))
    (462000, uint256("25b5e316bfe272ca869fe9ddd352d01c7ad3d9d751db7d65c5c4e690acd4ce42"))
    (463000, uint256("8df9bae746bd82bd3d101cc012727b313fdfefb23ee6769c86e9dfa291199b2a"))
    (464000, uint256("20c01c90835cceb699bbb130c221c3a8ab24a2485d620db18704773247e33971"))
    (465000, uint256("4b3bdf59b05fee96b05e70caa2facd6d902775bd6c5e6ca2dacb01a231d035b8"))
    (466000, uint256("4c8a025fba5c26980d71bc2439301bc0cb2c5f3dc1af70e080e8868310829729"))
    (467000, uint256("08970fbfaea682334d116ab8200fd93f6b2698d8981af58ae5dcdd0d816e228e"))
    (468000, uint256("7f0748da58bbe5c0ceaf26ebbd6feae50d97ad47dd7c297d7c56578a6e4c385e"))
    (469000, uint256("4f588255727ecb3dc1a26f4df8204fd071c72dd263f0ce53c935151aa9116387"))
    (470000, uint256("e05c2d9b331dceafeee203332321ac480c770ede7584903d92776768e29d384b"))
    (471000, uint256("82aa850a5f33335a2b7d4ff3a053eb5fed27f955b76788f32d969ca098fb7fc5"))
    (472000, uint256("31b2f9af6f842da8638c80a75941f756e03323944b328402d5e0935425dd11d5"))
    (473000, uint256("7e0c794c1996e35dbf275d1fb16be40a1d7157dd08980234f83d3a535cc93130"))
    (474000, uint256("1e5cb94631a093c9e38b4ebfb35f70340bbc84faf0bd029664e92acbf9a2401f"))
    (475000, uint256("b7ab84c90ef26de09e1e65e365fc56ecd1514bfc3d1b3df3887de4be13c17e92"))
    (476000, uint256("824d0ea2ebdc005ace9db953d56baec6bdfdbfc29db96a9400fb139a9676ecd5"));
static const Checkpoints::CCheckpointData data = {
    &mapCheckpoints,
    1524873600, // * UNIX timestamp of last checkpoint block
    0,          // * total number of transactions between genesis and last checkpoint
                //   (the tx=... number in the SetBestChain debug.log lines)
    2000        // * estimated number of transactions per day after checkpoint
};

static Checkpoints::MapCheckpoints mapCheckpointsTestnet =
    boost::assign::map_list_of(0, uint256("0x001"));
static const Checkpoints::CCheckpointData dataTestnet = {
    &mapCheckpointsTestnet,
    1524873600,
    0,
    250};

static Checkpoints::MapCheckpoints mapCheckpointsRegtest =
    boost::assign::map_list_of(0, uint256("0x001"));
static const Checkpoints::CCheckpointData dataRegtest = {
    &mapCheckpointsRegtest,
    1524873600,
    0,
    100};

libzerocoin::ZerocoinParams* CChainParams::Zerocoin_Params(bool useModulusV1) const
{
    assert(this);
    static CBigNum bnHexModulus = 0;
    if (!bnHexModulus)
        bnHexModulus.SetHex(zerocoinModulus);
    static libzerocoin::ZerocoinParams ZCParamsHex = libzerocoin::ZerocoinParams(bnHexModulus);
    static CBigNum bnDecModulus = 0;
    if (!bnDecModulus)
        bnDecModulus.SetDec(zerocoinModulus);
    static libzerocoin::ZerocoinParams ZCParamsDec = libzerocoin::ZerocoinParams(bnDecModulus);

    if (useModulusV1)
        return &ZCParamsHex;

    return &ZCParamsDec;
}

class CMainParams : public CChainParams
{
public:
    CMainParams()
    {
        networkID = CBaseChainParams::MAIN;
        strNetworkID = "main";
        /**
         * The message start string is designed to be unlikely to occur in normal data.
         * The characters are rarely used upper ASCII, not valid as UTF-8, and produce
         * a large 4-byte int at any alignment.
         */
        pchMessageStart[0] = 0x6e;
        pchMessageStart[1] = 0x72;
        pchMessageStart[2] = 0x4f;
        pchMessageStart[3] = 0x5a;
        vAlertPubKey = ParseHex("040d75796902e3eda97815d744328237872309a95b42a74b22d7580e56b086fbc19ae1d6ef30c9e27d060c9c48692a663b9a321161e19f853ca6a6499cba7d17f6");
        nDefaultPort = 39797;
        bnProofOfWorkLimit = ~uint256(0) >> 20; // LightPayCoin starting difficulty is 1 / 2^12
        nSubsidyHalvingInterval = 210000;
        nMaxReorganizationDepth = 100;
        nEnforceBlockUpgradeMajority = 750;
        nRejectBlockOutdatedMajority = 950;
        nToCheckBlockUpgradeMajority = 1000;
        nMinerThreads = 0;
        nTargetTimespan = 1 * 60; // LightPayCoin: 1 day
        nTargetSpacing = 1 * 60;  // LightPayCoin: 1 minute
        nMaturity = 50;
        nMasternodeCountDrift = 20;
        nMasternodeCollateralLimit = 1000;
        nMaxMoneyOut = 21000000 * COIN;

        /** Height or Time Based Activations **/
        nLastPOWBlock = 90;
        nModifierUpdateBlock = 615800;
        nZerocoinStartHeight = 863787;
        nZerocoinStartTime = 1587425929; // October 17, 2017 4:30:00 AM
        nBlockEnforceSerialRange = 895400; //Enforce serial range starting this block
        nBlockRecalculateAccumulators = 908000; //Trigger a recalculation of accumulators
        nBlockFirstFraudulent = 891737; //First block that bad serials emerged
        nBlockLastGoodCheckpoint = 891730; //Last valid accumulator checkpoint
        nBlockEnforceInvalidUTXO = 902850; //Start enforcing the invalid UTXO's
        nInvalidAmountFiltered = 268200*COIN; //Amount of invalid coins filtered through exchanges, that should be considered valid
        nBlockZerocoinV2 = 1153160; //!> The block that zerocoin v2 becomes active - roughly Tuesday, May 8, 2018 4:00:00 AM GMT
        nBlockDoubleAccumulated = 1050010;
        nEnforceNewSporkKey = 1587425929; //!> Sporks signed after (GMT): Tuesday, May 1, 2018 7:00:00 AM GMT must use the new spork key
        nRejectOldSporkKey = 1587425929; //!> Fully reject old spork key after (GMT): Friday, June 1, 2018 12:00:00 AM

        // Fake Serial Attack
        nFakeSerialBlockheightEnd = 1686229;
        nSupplyBeforeFakeSerial = 4131563 * COIN;   // zerocoin supply at block nFakeSerialBlockheightEnd

        /**
         * Build the genesis block. Note that the output of the genesis coinbase cannot
         * be spent as it did not originally exist in the database.
         *
         * CBlock(hash=00000ffd590b14, ver=1, hashPrevBlock=00000000000000, hashMerkleRoot=e0028e, nTime=1390095618, nBits=1e0ffff0, nNonce=28917698, vtx=1)
         *   CTransaction(hash=e0028e, ver=1, vin.size=1, vout.size=1, nLockTime=0)
         *     CTxIn(COutPoint(000000, -1), coinbase 04ffff001d01044c5957697265642030392f4a616e2f3230313420546865204772616e64204578706572696d656e7420476f6573204c6976653a204f76657273746f636b2e636f6d204973204e6f7720416363657074696e6720426974636f696e73)
         *     CTxOut(nValue=50.00000000, scriptPubKey=0xA9037BAC7050C479B121CF)
         *   vMerkleTree: e0028e
         */
        const char* pszTimestamp = "If you read this line in our code, then you are a genius, but why do you need it?!";
        CMutableTransaction txNew;
        txNew.vin.resize(1);
        txNew.vout.resize(1);
        txNew.vin[0].scriptSig = CScript() << 486604799 << CScriptNum(4) << vector<unsigned char>((const unsigned char*)pszTimestamp, (const unsigned char*)pszTimestamp + strlen(pszTimestamp));
        txNew.vout[0].nValue = 50 * COIN;
        txNew.vout[0].scriptPubKey = CScript() << ParseHex("0457c56ed69a1f42398804504fcab82f430cc864c8fc8cd25b76e141d12c13012ee9d500e11f84d5f75f5c669e88ca196142ddb7406d3635d840fa5e9d2a6bb100") << OP_CHECKSIG;
        genesis.vtx.push_back(txNew);
        genesis.hashPrevBlock = 0;
        genesis.hashMerkleRoot = genesis.BuildMerkleTree();
        genesis.nVersion = 1;
        genesis.nTime = 1524873600;
        genesis.nBits = 0x1e0ffff0;
        genesis.nNonce = 2394236;

        hashGenesisBlock = genesis.GetHash();
        assert(hashGenesisBlock == uint256("00000dfdec6a9190b26520e93ef5eba15a82646a47ddf8fb5be4477a836467ee"));
        assert(genesis.hashMerkleRoot == uint256("98a0c0dc8214278a8a27ce9d7ca4107dd7cd6787ea6001d3d6c1a7b764098570"));

        vSeeds.push_back(CDNSSeedData("80.211.128.125", "80.211.128.125"));         // Single node address
        vSeeds.push_back(CDNSSeedData("94.177.187.54", "94.177.187.54"));           // Single node address
        vSeeds.push_back(CDNSSeedData("80.211.129.187", "80.211.129.187"));         // Single node address

        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1, 49);
        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1, 13);
        base58Prefixes[SECRET_KEY] = std::vector<unsigned char>(1, 179);
        base58Prefixes[EXT_PUBLIC_KEY] = boost::assign::list_of(0x02)(0x2D)(0x25)(0x33).convert_to_container<std::vector<unsigned char> >();
        base58Prefixes[EXT_SECRET_KEY] = boost::assign::list_of(0x02)(0x21)(0x31)(0x2B).convert_to_container<std::vector<unsigned char> >();
        // 	BIP44 coin type is from https://github.com/satoshilabs/slips/blob/master/slip-0044.md
        base58Prefixes[EXT_COIN_TYPE] = boost::assign::list_of(0x80)(0x00)(0x00)(0x77).convert_to_container<std::vector<unsigned char> >();

        convertSeed6(vFixedSeeds, pnSeed6_main, ARRAYLEN(pnSeed6_main));

        fRequireRPCPassword = true;
        fMiningRequiresPeers = true;		// default true
        fAllowMinDifficultyBlocks = false;
        fDefaultConsistencyChecks = false;
        fRequireStandard = true;
        fMineBlocksOnDemand = false;
        fSkipProofOfWorkCheck = false;
        fTestnetToBeDeprecatedFieldRPC = false;
        fHeadersFirstSyncingActive = false;

        nPoolMaxTransactions = 3;
        nBudgetCycleBlocks = 43200; //!< Amount of blocks in a months period of time (using 1 minutes per) = (60*24*30)
        strSporkKey = "04b8a44c0467e07b59aacede1352cff10d7f194b1a09bd1bc62847b3e29f9f0a340ddc8f9c29423f27e0ec3b29e6b1f9127db303b0cad8f3b83ab8b1b52f61bac4";
        strSporkKeyOld = "04b8a44c0467e07b59aacede1352cff10d7f194b1a09bd1bc62847b3e29f9f0a340ddc8f9c29423f27e0ec3b29e6b1f9127db303b0cad8f3b83ab8b1b52f61bac4";
        strObfuscationPoolDummyAddress = "Lo3fnibtjwvqYE1T7Lce5uYbdt3pf6PKUu";
        nStartMasternodePayments = 1524873600; //Wed, 25 Jun 2014 20:36:16 GMT

        /** Zerocoin */
        zerocoinModulus = "25195908475657893494027183240048398571429282126204032027777137836043662020707595556264018525880784"
            "4069182906412495150821892985591491761845028084891200728449926873928072877767359714183472702618963750149718246911"
            "6507761337985909570009733045974880842840179742910064245869181719511874612151517265463228221686998754918242243363"
            "7259085141865462043576798423387184774447920739934236584823824281198163815010674810451660377306056201619676256133"
            "8441436038339044149526344321901146575444541784240209246165157233507787077498171257724679629263863563732899121548"
            "31438167899885040445364023527381951378636564391212010397122822120720357";
        nMaxZerocoinSpendsPerTransaction = 7; // Assume about 20kb each
        nMinZerocoinMintFee = 1 * CENT; //high fee required for zerocoin mints
        nMintRequiredConfirmations = 20; //the maximum amount of confirmations until accumulated in 19
        nRequiredAccumulation = 1;
        nDefaultSecurityLevel = 100; //full security level for accumulators
        nZerocoinHeaderVersion = 4; //Block headers must be this version once zerocoin is active
        nZerocoinRequiredStakeDepth = 200; //The required confirmations for a zpiv to be stakable

        nBudget_Fee_Confirmations = 6; // Number of confirmations for the finalization fee
    }

    const Checkpoints::CCheckpointData& Checkpoints() const
    {
        return data;
    }
};
static CMainParams mainParams;

/**
 * Testnet (v3)
 */
class CTestNetParams : public CMainParams
{
public:
    CTestNetParams()
    {
        networkID = CBaseChainParams::TESTNET;
        strNetworkID = "test";
        pchMessageStart[0] = 0x41;
        pchMessageStart[1] = 0x4d;
        pchMessageStart[2] = 0x5e;
        pchMessageStart[3] = 0x78;
        vAlertPubKey = ParseHex("043e8760d1c9ef3af5a5e49796afe4389a5cb53c6028b54b9af0a152f34762e453615a1aab9260a31045b85f87d4de36bbe6fd04478fcc103fd47c8e1b813c3d3c");
        nDefaultPort = 39795;
        nEnforceBlockUpgradeMajority = 51;
        nRejectBlockOutdatedMajority = 75;
        nToCheckBlockUpgradeMajority = 100;
        nMinerThreads = 0;
        nTargetTimespan = 1 * 60; // LightPayCoin: 1 day
        nTargetSpacing = 1 * 60;  // LightPayCoin: 1 minute
        nLastPOWBlock = 200;
        nMaturity = 15;
        nMasternodeCountDrift = 4;
        nMasternodeCollateralLimit = 1000;
        nModifierUpdateBlock = 51197; //approx Mon, 17 Apr 2017 04:00:00 GMT
        nMaxMoneyOut = 43199500 * COIN;
        nZerocoinStartHeight = 201576;
        nZerocoinStartTime = 1501776000;
        nBlockEnforceSerialRange = 1; //Enforce serial range starting this block
        nBlockRecalculateAccumulators = 9908000; //Trigger a recalculation of accumulators
        nBlockFirstFraudulent = 9891737; //First block that bad serials emerged
        nBlockLastGoodCheckpoint = 9891730; //Last valid accumulator checkpoint
        nBlockEnforceInvalidUTXO = 9902850; //Start enforcing the invalid UTXO's
        nInvalidAmountFiltered = 0; //Amount of invalid coins filtered through exchanges, that should be considered valid
        nBlockZerocoinV2 = 444020; //!> The block that zerocoin v2 becomes active
        nEnforceNewSporkKey = 1521604800; //!> Sporks signed after Wednesday, March 21, 2018 4:00:00 AM GMT must use the new spork key
        nRejectOldSporkKey = 1522454400; //!> Reject old spork key after Saturday, March 31, 2018 12:00:00 AM GMT

        // Fake Serial Attack
        nFakeSerialBlockheightEnd = -1;
        nSupplyBeforeFakeSerial = 0;

        //! Modify the testnet genesis block so the timestamp is valid for a later start.
        genesis.nTime = 1524873600;
        genesis.nNonce = 2394236;

        hashGenesisBlock = genesis.GetHash();
        assert(hashGenesisBlock == uint256("00000dfdec6a9190b26520e93ef5eba15a82646a47ddf8fb5be4477a836467ee"));

        vFixedSeeds.clear();
        vSeeds.clear();
/*
        vSeeds.push_back(CDNSSeedData("80.211.128.125", "80.211.128.125"));         // Single node address
        vSeeds.push_back(CDNSSeedData("94.177.187.54", "94.177.187.54"));           // Single node address
        vSeeds.push_back(CDNSSeedData("80.211.129.187", "80.211.129.187"));         // Single node address
*/
        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1, 139); // Testnet lightpaycoin addresses start with 'x' or 'y'
        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1, 19);  // Testnet lightpaycoin script addresses start with '8' or '9'
        base58Prefixes[SECRET_KEY] = std::vector<unsigned char>(1, 239);     // Testnet private keys start with '9' or 'c' (Bitcoin defaults)
        // Testnet lightpaycoin BIP32 pubkeys start with 'DRKV'
        base58Prefixes[EXT_PUBLIC_KEY] = boost::assign::list_of(0x3a)(0x80)(0x61)(0xa0).convert_to_container<std::vector<unsigned char> >();
        // Testnet lightpaycoin BIP32 prvkeys start with 'DRKP'
        base58Prefixes[EXT_SECRET_KEY] = boost::assign::list_of(0x3a)(0x80)(0x58)(0x37).convert_to_container<std::vector<unsigned char> >();
        // Testnet lightpaycoin BIP44 coin type is '1' (All coin's testnet default)
        base58Prefixes[EXT_COIN_TYPE] = boost::assign::list_of(0x80)(0x00)(0x00)(0x01).convert_to_container<std::vector<unsigned char> >();

        convertSeed6(vFixedSeeds, pnSeed6_test, ARRAYLEN(pnSeed6_test));

        fRequireRPCPassword = true;
        fMiningRequiresPeers = true;
        fAllowMinDifficultyBlocks = true;
        fDefaultConsistencyChecks = false;
        fRequireStandard = false;
        fMineBlocksOnDemand = false;
        fSkipProofOfWorkCheck = false;
        fTestnetToBeDeprecatedFieldRPC = true;

        nPoolMaxTransactions = 2;
        nBudgetCycleBlocks = 144; //!< Ten cycles per day on testnet
        strSporkKey = "04cded1204a57acd6280c8499b7a2df052609dbf96546453984d632204d651d72a37013edc9d115e5a385e100eb7e867923fdd0bb7d9dc31aa1eb9d59b00c76697";
        strSporkKeyOld = "04cded1204a57acd6280c8499b7a2df052609dbf96546453984d632204d651d72a37013edc9d115e5a385e100eb7e867923fdd0bb7d9dc31aa1eb9d59b00c76697";
        strObfuscationPoolDummyAddress = "xxVKdbxVogrXrPLMo2qEEyCm1GRv2KZCLy";
        nStartMasternodePayments = 1524873600; //Fri, 09 Jan 2015 21:05:58 GMT
        nBudget_Fee_Confirmations = 3; // Number of confirmations for the finalization fee. We have to make this very short
                                       // here because we only have a 8 block finalization window on testnet
    }
    const Checkpoints::CCheckpointData& Checkpoints() const
    {
        return dataTestnet;
    }
};
static CTestNetParams testNetParams;

/**
 * Regression test
 */
class CRegTestParams : public CTestNetParams
{
public:
    CRegTestParams()
    {
        networkID = CBaseChainParams::REGTEST;
        strNetworkID = "regtest";
        pchMessageStart[0] = 0x2d;
        pchMessageStart[1] = 0x53;
        pchMessageStart[2] = 0x6f;
        pchMessageStart[3] = 0x40;
        nDefaultPort = 39793;
        nSubsidyHalvingInterval = 150;
        nEnforceBlockUpgradeMajority = 750;
        nRejectBlockOutdatedMajority = 950;
        nToCheckBlockUpgradeMajority = 1000;
        nMinerThreads = 1;
        nTargetTimespan = 24 * 60 * 60; // LightPayCoin: 1 day
        nTargetSpacing = 1 * 60;        // LightPayCoin: 1 minutes
        bnProofOfWorkLimit = ~uint256(0) >> 1;
        nLastPOWBlock = 250;
        nMaturity = 100;
        nMasternodeCountDrift = 4;
        nModifierUpdateBlock = 0; //approx Mon, 17 Apr 2017 04:00:00 GMT
        nMaxMoneyOut = 43199500 * COIN;
        nZerocoinStartHeight = 300;
        nBlockZerocoinV2 = 300;
        nZerocoinStartTime = 1501776000;
        nBlockEnforceSerialRange = 1; //Enforce serial range starting this block
        nBlockRecalculateAccumulators = 999999999; //Trigger a recalculation of accumulators
        nBlockFirstFraudulent = 999999999; //First block that bad serials emerged
        nBlockLastGoodCheckpoint = 999999999; //Last valid accumulator checkpoint

        // Fake Serial Attack
        nFakeSerialBlockheightEnd = -1;

        //! Modify the regtest genesis block so the timestamp is valid for a later start.
        genesis.nTime = 1524873600;
        genesis.nBits = 0x207fffff;
        genesis.nNonce = 906460;

        hashGenesisBlock = genesis.GetHash();
        assert(hashGenesisBlock == uint256("00000d885e2813770fd59e71010b6b62a9b0609655109bf4e1b24c3bd524ae0c"));

        vFixedSeeds.clear(); //! Testnet mode doesn't have any fixed seeds.
        vSeeds.clear();      //! Testnet mode doesn't have any DNS seeds.

        fRequireRPCPassword = false;
        fMiningRequiresPeers = false;
        fAllowMinDifficultyBlocks = true;
        fDefaultConsistencyChecks = true;
        fRequireStandard = false;
        fMineBlocksOnDemand = true;
        fSkipProofOfWorkCheck = true;
        fTestnetToBeDeprecatedFieldRPC = false;
    }
    const Checkpoints::CCheckpointData& Checkpoints() const
    {
        return dataRegtest;
    }
};
static CRegTestParams regTestParams;

/**
 * Unit test
 */
class CUnitTestParams : public CMainParams, public CModifiableParams
{
public:
    CUnitTestParams()
    {
        networkID = CBaseChainParams::UNITTEST;
        strNetworkID = "unittest";
        nDefaultPort = 39791;
        vFixedSeeds.clear(); //! Unit test mode doesn't have any fixed seeds.
        vSeeds.clear();      //! Unit test mode doesn't have any DNS seeds.

        fRequireRPCPassword = false;
        fMiningRequiresPeers = false;
        fDefaultConsistencyChecks = true;
        fAllowMinDifficultyBlocks = false;
        fMineBlocksOnDemand = true;
    }

    const Checkpoints::CCheckpointData& Checkpoints() const
    {
        // UnitTest share the same checkpoints as MAIN
        return data;
    }

    //! Published setters to allow changing values in unit test cases
    virtual void setSubsidyHalvingInterval(int anSubsidyHalvingInterval) { nSubsidyHalvingInterval = anSubsidyHalvingInterval; }
    virtual void setEnforceBlockUpgradeMajority(int anEnforceBlockUpgradeMajority) { nEnforceBlockUpgradeMajority = anEnforceBlockUpgradeMajority; }
    virtual void setRejectBlockOutdatedMajority(int anRejectBlockOutdatedMajority) { nRejectBlockOutdatedMajority = anRejectBlockOutdatedMajority; }
    virtual void setToCheckBlockUpgradeMajority(int anToCheckBlockUpgradeMajority) { nToCheckBlockUpgradeMajority = anToCheckBlockUpgradeMajority; }
    virtual void setDefaultConsistencyChecks(bool afDefaultConsistencyChecks) { fDefaultConsistencyChecks = afDefaultConsistencyChecks; }
    virtual void setAllowMinDifficultyBlocks(bool afAllowMinDifficultyBlocks) { fAllowMinDifficultyBlocks = afAllowMinDifficultyBlocks; }
    virtual void setSkipProofOfWorkCheck(bool afSkipProofOfWorkCheck) { fSkipProofOfWorkCheck = afSkipProofOfWorkCheck; }
};
static CUnitTestParams unitTestParams;


static CChainParams* pCurrentParams = 0;

CModifiableParams* ModifiableParams()
{
    assert(pCurrentParams);
    assert(pCurrentParams == &unitTestParams);
    return (CModifiableParams*)&unitTestParams;
}

const CChainParams& Params()
{
    assert(pCurrentParams);
    return *pCurrentParams;
}

CChainParams& Params(CBaseChainParams::Network network)
{
    switch (network) {
    case CBaseChainParams::MAIN:
        return mainParams;
    case CBaseChainParams::TESTNET:
        return testNetParams;
    case CBaseChainParams::REGTEST:
        return regTestParams;
    case CBaseChainParams::UNITTEST:
        return unitTestParams;
    default:
        assert(false && "Unimplemented network");
        return mainParams;
    }
}

void SelectParams(CBaseChainParams::Network network)
{
    SelectBaseParams(network);
    pCurrentParams = &Params(network);
}

bool SelectParamsFromCommandLine()
{
    CBaseChainParams::Network network = NetworkIdFromCommandLine();
    if (network == CBaseChainParams::MAX_NETWORK_TYPES)
        return false;

    SelectParams(network);
    return true;
}
